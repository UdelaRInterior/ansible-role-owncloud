---
# tasks file for owncloud

# load os specific variables
- include_tasks: ./setup_env.yml
  tags: always

# install required packages
- include_tasks: php_install.yml
  tags: always

- block:
  - name: Verify permission for installed TLS certificates
    include_tasks: ./tls_installed.yml
    when: owncloud_tls_cert_method == "installed"

  - name: Install given signed certificates
    include_tasks: ./tls_signed.yml
    when: owncloud_tls_cert_method == "signed"

  - name: configure self signed TLS certificates
    include_tasks: ./tls_selfsigned.yml
    when: owncloud_tls_cert_method == "self-signed"
  when: owncloud_install_tls

- block:
  - name: Configure Nginx web server.
    include_tasks: ./http_nginx.yml
    when: owncloud_websrv in ["nginx"]

  - name: Configure Apache web server
    include_tasks: ./http_apache.yml
    when: owncloud_websrv in ["apache", "apache2"]
  when: owncloud_install_websrv

- name: Configure Redis server
  include_tasks: ./redis_server.yml
  when: (owncloud_install_redis_server | bool)

- block:
  - name: Configure mysql/mariadb database
    include_tasks: ./db_mysql.yml
    when: owncloud_db_backend in ["mysql", "mariadb"]

  - name: Configure PostgreSQL database
    include_tasks: ./db_postgresql.yml
    when: owncloud_db_backend in ["pgsql"]
  when: owncloud_install_db

- name: Check Owncloud installed
  stat: "path={{ owncloud_webroot }}/index.php"
  register: oc_owncloud_installed

- name: Downloading Owncloud
  include_tasks: ./oc_download.yml
  when: not oc_owncloud_installed.stat.exists

- name: Check Owncloud configuration exists.
  stat: path="{{ owncloud_webroot }}/config/config.php"
  register: oc_owncloud_conf

- name: Check Owncloud is configured
  command: grep -q "{{ owncloud_trusted_domain| first }}" {{ owncloud_webroot }}/config/config.php
  failed_when: False
  changed_when: False
  register: oc_owncloud_configured
  when: oc_owncloud_conf.stat.exists

- name: Owncloud installation
  include_tasks: ./oc_installation.yml
  when: |
    (not oc_owncloud_conf.stat.exists) or
    (oc_owncloud_configured.rc is defined and oc_owncloud_configured.rc != 0)

- block:
  - name: "[NC apps] - lists the number of apps available in the instance."
    command: php occ app:list --output=json_pretty --no-warnings
    args:
      chdir: "{{ owncloud_webroot }}"
    become_user: "{{ owncloud_websrv_user }}"
    become: yes
    become_flags: "{{ ansible_become_flags | default(omit) }}"
    changed_when: false
    register: oc_apps_list

  - name: "[NC apps] - convert list toOC_ yaml."
    set_fact: oc_available_apps="{{ oc_apps_list.stdout | from_json }}"

  - name: "[NC apps] - installation."
    include_tasks: ./oc_apps.yml
    # do if the app is not enabled and ( (archive path is not "") or (app is disabled) )
    when:
      - item.key not in oc_available_apps.enabled
      - (item.value is not empty) or (item.key in oc_available_apps.disabled)
    with_dict: "{{ owncloud_apps }}"
  when:
    - owncloud_apps is defined
    - owncloud_apps is mapping
  tags: install_apps
