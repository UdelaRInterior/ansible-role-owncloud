---
# additionnal setup and fixes for OS dependent environment
- name: "controls owncloud_trusted_domain type"
  fail:
    msg: "New versions require owncloud_trusted_domain to be declared as a list."
  when: owncloud_trusted_domain is string

- name: "[ENV] include OS static vars"
  include_vars: '{{ item }}'
  loop:
    - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
    - '{{ ansible_os_family }}.yml'

- name: "[ENV] - ca-certificate are up to date"
  # needed for downloading from download.owncloud.com as the site use letsencrypt certificates
  # letsencrypt may not be trusted on older OS
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: 86400
  loop:
    - acl 
    - ca-certificates
  when: ansible_os_family in [ "Debian" ]

- name: "[ENV] - Load PHP environment from OS specific variable"
  include_vars: "../defaults/php{{ php_ver }}_env.yml"

  # fix for debian not using sudo :
  # finding out if sudo is installed or not
- name: "[ENV] - Debian only : checking sudo."
  command: "dpkg -l sudo"
  changed_when: False
  register: oc_sudo_installed_result
  failed_when: False
  when: ansible_distribution == "Debian"

- block:
  - name: "[ENV] - rolling back to su."
    set_fact: ansible_become_method="su"
  - name: "[ENV] - force su to use /bin/sh as shell"
    set_fact: ansible_become_flags='-s /bin/sh'
  when:
    - oc_sudo_installed_result.rc is defined
    - oc_sudo_installed_result.rc != 0

