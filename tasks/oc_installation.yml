---
#########
# Run command line installation.
# the web server must be running by now in order to launch the installation
- name: Trigger all pending handlers
  meta: flush_handlers

- name: "[NC] - Setting directory ownership & permissions for the data folder"
  file:
    path: "{{ owncloud_data_dir }}"
    mode: "u=rwX,g=rX,o-rwx"
    recurse: yes
    state: directory
    owner: "{{ owncloud_websrv_user }}"
    group: "{{ owncloud_websrv_group }}"

- name: "[NC] - generate {{ owncloud_admin_name }} password:"
  set_fact: owncloud_admin_pwd="{{ lookup( 'password', 'owncloud_instances/'+ owncloud_instance_name +'/web_admin.pwd length=10' ) }}"
  when: owncloud_admin_pwd is not defined

- name: "[NC] - Set temporary permissions for command line installation."
  file:
    path: "{{ owncloud_webroot }}"
    state: directory
    recurse: yes
    owner: "{{ owncloud_websrv_user }}"
    group: "{{ owncloud_websrv_group }}"

- block:
  - name: "[NC] - removing possibly old or incomplete config.php"
    file:
      path: "{{ owncloud_webroot }}/config/config.php"
      state: absent

  - name: "[NC] - Run occ installation command"
    become_user: "{{ owncloud_websrv_user }}"
    become_flags: "{{ ansible_become_flags | default(omit) }}"
    become: yes
    command: >
        php occ maintenance:install
        --database={{ owncloud_tmp_backend }}
        --database-host={{ owncloud_db_host }}
        --database-name={{ owncloud_db_name }}
        --database-user={{ owncloud_db_admin }}
        --database-pass={{ owncloud_db_pwd }}
        --admin-user={{ owncloud_admin_name }}
        --admin-pass={{ owncloud_admin_pwd }}
        --data-dir={{ owncloud_data_dir }}
    args:
      chdir: "{{ owncloud_webroot }}"
      creates: "{{ owncloud_webroot }}/config/config.php"
    vars:
      # mariadb is equal to mysql for occ
      owncloud_tmp_backend: "{{ 'mysql' if owncloud_db_backend == 'mariadb' else owncloud_db_backend }}"
    notify: reload http

  - name: "[NC] - Verify config.php - check filesize"
    stat: path="{{ owncloud_webroot }}/config/config.php"
    register: oc_installation_confsize
    failed_when: oc_installation_confsize.stat.size is undefined or oc_installation_confsize.stat.size <= 100

  - name: "[NC] - Verify config.php - php syntax check"
    command: "php -l {{ owncloud_webroot }}/config/config.php"
    register: oc_installation_confphp
    changed_when: False
    failed_when:
      - oc_installation_confphp.rc is defined
      - oc_installation_confphp.rc != 0

  rescue:
    # - name: Unfix su issue with occ
    #   include_tasks: tasks/unfix_su.yml
    #   when: ansible_become_method == "su"

    - name: "[NC] - removing config.php when occ fail"
      file:
        path: "{{ owncloud_webroot }}/config/config.php"
        state: absent
      failed_when: True

- name: "[NC] - Set Trusted Domains"
  become_user: "{{ owncloud_websrv_user }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: yes
  command: php occ config:system:set trusted_domains {{ item.0 }} --value="{{ item.1 | ipwrap }}"
  args:
    chdir: "{{ owncloud_webroot }}"
  with_indexed_items: "{{ owncloud_trusted_domain }}"
  changed_when: true

- name: "[NC] - Set Trusted Proxies"
  become_user: "{{ owncloud_websrv_user }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: yes
  command: php occ config:system:set trusted_proxies {{ item.0 }} --value="{{ item.1 }}"
  args:
    chdir: "{{ owncloud_webroot }}"
  with_indexed_items: "{{ owncloud_trusted_proxies }}"
  changed_when: true

- name: "[NC] - Set Owncloud settings in config.php"
  become_user: "{{ owncloud_websrv_user }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: yes
  command: php occ config:system:set {{ item.name }} --value="{{ item.value }}"
  args:
    chdir: "{{ owncloud_webroot }}"
  with_items:
    - "{{ owncloud_config_settings }}"
  changed_when: true

- name: "[NC] - Set Redis Server"
  become_user: "{{ owncloud_websrv_user }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: yes
  command: php occ config:system:set {{ item.name }} --value="{{ item.value }}"
  args:
    chdir: "{{ owncloud_webroot }}"
  with_items:
    - "{{ owncloud_redis_settings }}"
  when: (owncloud_install_redis_server | bool)

- name: "[NC] - Install Cronjob"
  cron:
    name: "Owncloud Cronjob"
    minute: "*/15"
    user: "{{ owncloud_websrv_user }}"
    job: "php {{ owncloud_webroot }}/cron.php"
    cron_file: "owncloud"
  when: (owncloud_background_cron | bool)

- name: "[NC] - Set Cron method to Crontab"
  become_user: "{{ owncloud_websrv_user }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: yes
  command: php occ background:cron
  args:
    chdir: "{{ owncloud_webroot }}"
  when: (owncloud_background_cron | bool)

- name: "[NC] - Set Custom Mimetype"
  copy:
    dest: "{{ owncloud_webroot }}/config/mimetypemapping.json"
    src: files/owncloud_custom_mimetypemapping.json

- name: "[NC] - Ensure Owncloud directories are 0750"
  command: find {{ owncloud_data_dir }} -type d -exec chmod -c 0750 {} \;
  register: oc_installation_chmod_result
  changed_when: "oc_installation_chmod_result.stdout != \"\""

- name: "[NC] - Ensure Owncloud files are 0640"
  command: find {{ owncloud_data_dir }} -type f -exec chmod -c 0640 {} \;
  register: oc_installation_chmod_result
  changed_when: "oc_installation_chmod_result.stdout != \"\""

- name: "[NC] - Setting stronger directory ownership"
  file:
    path: "{{ owncloud_webroot }}/{{ item }}/"
    recurse: yes
    owner: "{{ owncloud_websrv_user }}"
    group: "{{ owncloud_websrv_group }}"
    state: directory
  with_items:
    - apps
    - assets
    - config
    - themes
    - updater
